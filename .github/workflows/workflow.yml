name: CI/CD Workflow

on:
  push:
    branches:
      - main
      - master
      - 'feature/*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
      - master
    paths-ignore:
      - '**.md'

jobs:
  CI:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Run linter 👀
        run: yarn lint

      - name: Build and Generate
        run: yarn generate

      - name: Run tests 🧪
        run: yarn test

      - name: Archive Production Artifact 📦
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist

  # CD:
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  #   needs: CI

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout 🛎
  #       uses: actions/checkout@master

  #     - name: Download Artifact 📦
  #       uses: actions/download-artifact@master
  #       with:
  #         name: dist
  #         path: dist

  #     # Please configure this step for your deployment
  #     - name: Deploy to Any hosting service
  #       run: YOUR DEPLOYMENT COMMANDS
